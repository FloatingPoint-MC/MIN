name: Maven Publish

# 检测到 src 文件内 .java 文件有变动执行编译
on:
  push:
    tags:
      - '*'

jobs:
  build:
    #	配置权限
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      # 下载代码
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        # 安装 JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      # 配置 settings.xml 一般用于 Maven 私库验证等
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: ''
          servers: ''
      # Maven 打包
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      # 将打包好的 Jar 包 放到 staging 文件夹
      - name: Copy files
        run: mkdir staging && cp target/libs/*.jar staging && cp target/libs/*.sha1 staging
      # 设置 jobs Maven pom 版本环境变量
      - name: Publish to GitHub Releases
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      # 上传文件并发布 Release
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.RELEASE_VERSION }}"
          prerelease: false
          title: "Release ${{ env.RELEASE_VERSION }}"
          files: |
            staging/*.jar
            staging/*.sha1
      - name: Branch Creator
        uses: Vent-Finance/branch_creator@v1.0.0
        with:
          name: "${{ env.RELEASE_VERSION }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
